# {{ ansible_managed }}
[lb]
{% for server in openstack_servers %}
{% if server.metadata.group is defined and server.metadata.group == 'lb' %}
{{ server.name }} ansible_ssh_host={{ server.private_v4 }}
{% endif %}
{% endfor %}

[controlplane]
{% for server in openstack_servers %}
{% if server.metadata.group is defined and server.metadata.group == 'controlplane' %}
{{ server.name }} ansible_ssh_host={{ server.private_v4 }}
{% endif %}
{% endfor %}

[bastion]
{% for server in openstack_servers %}
{% if server.metadata.group is defined and server.metadata.group == 'bastion' %}
{{ server.name }} ansible_ssh_host={{ server.public_v4 }}
{% endif %}
{% endfor %}

[all:vars]
{% if heat_controlplane_output is defined %}
{% for item in heat_controlplane_output['stack']['outputs'] %}
{% if item.output_key | regex_search('volume') %}
{{ item.output_key }}="{{ item.output_value }}"
{% endif %}
{% if item.output_key | regex_search('ip_id') %}
{{ item.output_key }}="{{ item.output_value }}"
{% endif %}
{% endfor %}
{% endif %}

{% if heat_controlplane_output is defined %}
{% for item in heat_ip_output['stack']['outputs'] %}
{% if item.output_key | regex_search('ip_id') %}
{{ item.output_key }}="{{ item.output_value }}"
{% endif %}
{% endfor %}
{% endif %}

[nomad:children]
node
master

[cluster:children]
lb

[master:vars]
monitoring_server_mode=true
scheduler_server_mode=true

[node:vars]
monitoring_server_mode=false
scheduler_server_mode=false
dns_relay_listening_interfaces=[ "docker0", "lo" ]

[lb:vars]
{% for server in openstack_servers %}
{% if server.metadata.group is defined and server.metadata.group == 'bastion' %}
ansible_ssh_common_args='-o ProxyCommand="ssh -W %h:%p -q cloudadm@{{ server.public_v4 }}" -o ControlPath=~/.ssh/mux-{{ heat_stack_controlplane.name }}-%r@%h:%p -o ControlPersist=15m -o StrictHostKeyChecking=no'
{% endif %}
{% endfor %}
monitoring_server_mode=false
cluster_node_attribute_value=lb

[nomad:vars]
{% for server in openstack_servers %}
{% if server.metadata.group is defined and server.metadata.group == 'bastion' %}
ansible_ssh_common_args='-o ProxyCommand="ssh -W %h:%p -q cloudadm@{{ server.public_v4 }}" -o ControlPath=~/.ssh/mux-{{ heat_stack_controlplane.name }}-%r@%h:%p -o ControlPersist=15m -o StrictHostKeyChecking=no'
{% endif %}
{% endfor %}

[bastion:vars]
{% for server in openstack_servers %}
{% if server.metadata.group is defined and server.metadata.group == 'bastion' %}
ansible_ssh_common_args='-o ControlPath=~/.ssh/mux-{{ heat_stack_controlplane.name }}-%r@%h:%p -o ControlPersist=15m -o StrictHostKeyChecking=no'
{% endif %}
{% endfor %}
